var WebMol=WebMol||{};WebMol.Math={clamp:function(a,b,c){return Math.min(Math.max(a,b),c)},degToRad:function(){var a=Math.PI/180;return function(b){return b*a}}()};WebMol.Quaternion=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};
WebMol.Quaternion.prototype={set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w;return this},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var a=this.length();0===a?(this.z=this.y=this.x=0,this.w=1):(a=1/a,this.x*=a,this.y*=a,this.z*=a,this.w*=a);return this}};WebMol.Vector2=function(a,b){this.x=a||0;this.y=b||0};
WebMol.Vector2.prototype={set:function(a,b){this.x=a;this.y=b;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},clone:function(){return new WebMol.Vector2(this.x,this.y)}};WebMol.Vector3=function(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0};
WebMol.Vector3.prototype={set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},divideScalar:function(a){0!==a?(this.x/=a,this.y/=a,this.z/=a):this.z=this.y=this.x=0;return this},applyProjection:function(a){var b=this.x,
c=this.y,d=this.z;a=a.elements;var e=a[3]*b+a[7]*c+a[11]*d+a[15];this.x=(a[0]*b+a[4]*c+a[8]*d+a[12])/e;this.y=(a[1]*b+a[5]*c+a[9]*d+a[13])/e;this.z=(a[2]*b+a[6]*c+a[10]*d+a[14])/e;return this},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},normalize:function(){return this.divideScalar(this.length())},clone:function(){return new WebMol.Vector3(this.x,this.y,this.z)}};
WebMol.Matrix3=function(a,b,c,d,e,h,g,m,l){this.elements=new Float32Array(9);this.set(void 0!==a?a:1,b||0,c||0,d||0,void 0!==e?e:1,h||0,g||0,m||0,void 0!==l?l:1)};
WebMol.Matrix3.prototype={set:function(a,b,c,d,e,h,g,m,l){var k=this.elements;k[0]=a;k[3]=b;k[6]=c;k[1]=d;k[4]=e;k[7]=h;k[2]=g;k[5]=m;k[8]=l;return this},identity:function(){this.set(1,0,0,0,1,0,0,0,1);return this},copy:function(a){a=a.elements;this.set(a[0],a[3],a[6],a[1],a[4],a[7],a[2],a[5],a[8])},multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[3]*=a;b[6]*=a;b[1]*=a;b[4]*=a;b[7]*=a;b[2]*=a;b[5]*=a;b[8]*=a;return this},getInverse:function(a,b){var c=a.elements,d=this.elements;d[0]=c[10]*
c[5]-c[6]*c[9];d[1]=-c[10]*c[1]+c[2]*c[9];d[2]=c[6]*c[1]-c[2]*c[5];d[3]=-c[10]*c[4]+c[6]*c[8];d[4]=c[10]*c[0]-c[2]*c[8];d[5]=-c[6]*c[0]+c[2]*c[4];d[6]=c[9]*c[4]-c[5]*c[8];d[7]=-c[9]*c[0]+c[1]*c[8];d[8]=c[5]*c[0]-c[1]*c[4];c=c[0]*d[0]+c[1]*d[3]+c[2]*d[6];if(0===c){if(b)throw Error("Matrix3.getInverse(): can't invert matrix, determinant is 0");console.warn("Matrix3.getInverse(): can't invert matrix, determinant is 0");this.identity();return this}this.multiplyScalar(1/c);return this},clone:function(){var a=
this.elements;return new WebMol.Matrix3(a[0],a[3],a[6],a[1],a[4],a[7],a[2],a[5],a[8])}};WebMol.Matrix4=function(a,b,c,d,e,h,g,m,l,k,n,q,r,s,t,p){var f=this.elements=new Float32Array(16);f[0]=void 0!==a?a:1;f[4]=b||0;f[8]=c||0;f[12]=d||0;f[1]=e||0;f[5]=void 0!==h?h:1;f[9]=g||0;f[13]=m||0;f[2]=l||0;f[6]=k||0;f[10]=void 0!==n?n:1;f[14]=q||0;f[3]=r||0;f[7]=s||0;f[11]=t||0;f[15]=void 0!==p?p:1};
WebMol.Matrix4.prototype={set:function(a,b,c,d,e,h,g,m,l,k,n,q,r,s,t,p){var f=this.elements;f[0]=a;f[4]=b;f[8]=c;f[12]=d;f[1]=e;f[5]=h;f[9]=g;f[13]=m;f[2]=l;f[6]=k;f[10]=n;f[14]=q;f[3]=r;f[7]=s;f[11]=t;f[15]=p;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(a){a=a.elements;this.set(a[0],a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15]);return this},multiplyMatrices:function(a,b){var c=a.elements,d=b.elements,e=this.elements,
h=c[0],g=c[4],m=c[8],l=c[12],k=c[1],n=c[5],q=c[9],r=c[13],s=c[2],t=c[6],p=c[10],f=c[14],u=c[3],v=c[7],w=c[11],c=c[15],x=d[0],y=d[4],z=d[8],A=d[12],B=d[1],C=d[5],D=d[9],E=d[13],F=d[2],G=d[6],H=d[10],I=d[14],J=d[3],K=d[7],L=d[11],d=d[15];e[0]=h*x+g*B+m*F+l*J;e[4]=h*y+g*C+m*G+l*K;e[8]=h*z+g*D+m*H+l*L;e[12]=h*A+g*E+m*I+l*d;e[1]=k*x+n*B+q*F+r*J;e[5]=k*y+n*C+q*G+r*K;e[9]=k*z+n*D+q*H+r*L;e[13]=k*A+n*E+q*I+r*d;e[2]=s*x+t*B+p*F+f*J;e[6]=s*y+t*C+p*G+f*K;e[10]=s*z+t*D+p*H+f*L;e[14]=s*A+t*E+p*I+f*d;e[3]=u*x+
v*B+w*F+c*J;e[7]=u*y+v*C+w*G+c*K;e[11]=u*z+v*D+w*H+c*L;e[15]=u*A+v*E+w*I+c*d;return this},multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[4]*=a;b[8]*=a;b[12]*=a;b[1]*=a;b[5]*=a;b[9]*=a;b[13]*=a;b[2]*=a;b[6]*=a;b[10]*=a;b[14]*=a;b[3]*=a;b[7]*=a;b[11]*=a;b[15]*=a;return this},getInverse:function(a,b){var c=this.elements,d=a.elements,e=d[0],h=d[4],g=d[8],m=d[12],l=d[1],k=d[5],n=d[9],q=d[13],r=d[2],s=d[6],t=d[10],p=d[14],f=d[3],u=d[7],v=d[11],w=d[15];c[0]=n*p*u-q*t*u+q*s*v-k*p*v-n*s*w+k*t*w;
c[4]=m*t*u-g*p*u-m*s*v+h*p*v+g*s*w-h*t*w;c[8]=g*q*u-m*n*u+m*k*v-h*q*v-g*k*w+h*n*w;c[12]=m*n*s-g*q*s-m*k*t+h*q*t+g*k*p-h*n*p;c[1]=q*t*f-n*p*f-q*r*v+l*p*v+n*r*w-l*t*w;c[5]=g*p*f-m*t*f+m*r*v-e*p*v-g*r*w+e*t*w;c[9]=m*n*f-g*q*f-m*l*v+e*q*v+g*l*w-e*n*w;c[13]=g*q*r-m*n*r+m*l*t-e*q*t-g*l*p+e*n*p;c[2]=k*p*f-q*s*f+q*r*u-l*p*u-k*r*w+l*s*w;c[6]=m*s*f-h*p*f-m*r*u+e*p*u+h*r*w-e*s*w;c[10]=h*q*f-m*k*f+m*l*u-e*q*u-h*l*w+e*k*w;c[14]=m*k*r-h*q*r-m*l*s+e*q*s+h*l*p-e*k*p;c[3]=n*s*f-k*t*f-n*r*u+l*t*u+k*r*v-l*s*v;c[7]=
h*t*f-g*s*f+g*r*u-e*t*u-h*r*v+e*s*v;c[11]=g*k*f-h*n*f-g*l*u+e*n*u+h*l*v-e*k*v;c[15]=h*n*r-g*k*r+g*l*s-e*n*s-h*l*t+e*k*t;c=d[0]*c[0]+d[1]*c[4]+d[2]*c[8]+d[3]*c[12];if(0===c){if(b)throw Error("Matrix4.getInverse(): can't invert matrix, determinant is 0");console.warn("Matrix4.getInverse(): can't invert matrix, determinant is 0");this.identity();return this}this.multiplyScalar(1/c);return this},scale:function(a){var b=this.elements,c=a.x,d=a.y;a=a.z;b[0]*=c;b[4]*=d;b[8]*=a;b[1]*=c;b[5]*=d;b[9]*=a;b[2]*=
c;b[6]*=d;b[10]*=a;b[3]*=c;b[7]*=d;b[11]*=a;return this},makeFrustum:function(a,b,c,d,e,h){var g=this.elements;g[0]=2*e/(b-a);g[4]=0;g[8]=(b+a)/(b-a);g[12]=0;g[1]=0;g[5]=2*e/(d-c);g[9]=(d+c)/(d-c);g[13]=0;g[2]=0;g[6]=0;g[10]=-(h+e)/(h-e);g[14]=-2*h*e/(h-e);g[3]=0;g[7]=0;g[11]=-1;g[15]=0;return this},makePerspective:function(a,b,c,d){a=c*Math.tan(WebMol.Math.degToRad(.5*a));var e=-a;return this.makeFrustum(e*b,a*b,e,a,c,d)},clone:function(){var a=this.elements;return new WebMol.Matrix4(a[0],a[4],a[8],
a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15])}};WebMol.Ray=function(a,b){this.origin=void 0!==a?a:new WebMol.Vector3;this.direction=void 0!==b?b:new WebMol.Vector3};WebMol.Ray.prototype={set:function(a,b){this.origin.copy(a);this.direction.copy(b);return this},copy:function(a){this.origin.copy(a.origin);this.direction.copy(a.direction);return this},clone:function(){return(new WebMol.Ray).copy(this)}};
WebMol.Sphere=function(a,b){this.center=void 0!==a?a:new WebMol.Vector3;this.a=void 0!==b?b:0};WebMol.Sphere.prototype={set:function(a,b){this.center.copy(a);this.a=b;return this},copy:function(a){this.center.copy(a.center);this.a=a.a;return this},clone:function(){return(new WebMol.Sphere).copy(this)}};
WebMol.Cylinder=function(a,b,c){this.d=void 0!==a?a:new WebMol.Vector3;this.e=void 0!==b?b:new WebMol.Vector3;this.direction=(new WebMol.Vector3).subVectors(this.e,this.d).normalize();this.a=void 0!==c?c:0};WebMol.Cylinder.prototype={copy:function(a){this.d.copy(a.d);this.e.copy(a.e);this.direction.copy(a.direction);this.a=a.a;return this},lengthSq:function(){var a=new WebMol.Vector3;return function(){return a.subVectors(this.e,this.d).lengthSq()}}()};
WebMol.Triangle=function(a,b,c){this.l=void 0!==a?a:new WebMol.Vector3;this.b=void 0!==b?b:new WebMol.Vector3;this.n=void 0!==c?c:new WebMol.Vector3};WebMol.Triangle.prototype={copy:function(a){this.l.copy(a.l);this.b.copy(a.b);this.n.copy(a.n);return this}};WebMol=WebMol||{};
WebMol.EventDispatcher=function(){var a={};this.addEventListener=function(b,c){void 0===a[b]&&(a[b]=[]);-1===a[b].indexOf(c)&&a[b].push(c)};this.removeEventListener=function(b,c){var d=a[b].indexOf(c);-1!==d&&a[b].splice(d,1)};this.dispatchEvent=function(b){var c=a[b.type];if(void 0!==c){b.target=this;for(var d=0,e=c.length;d<e;d++)c[d].call(this,b)}}};
WebMol.Object3D=function(){this.id=WebMol.Object3DIDCount++;this.name="";this.parent=void 0;this.children=[];this.position=new WebMol.Vector3;this.rotation=new WebMol.Vector3;this.matrix=new WebMol.Matrix4;this.matrixWorld=new WebMol.Matrix4;this.quaternion=new WebMol.Quaternion;this.eulerOrder="XYZ";this.up=new WebMol.Vector3(0,1,0);this.scale=new WebMol.Vector3(1,1,1);this.rotationAutoUpdate=this.matrixWorldNeedsUpdate=this.matrixAutoUpdate=!0;this.useQuaternion=!1;this.visible=!0};
WebMol.Object3D.prototype={add:function(a){if(a===this)console.error("Can't add WebMol.Object3D to itself");else{a.parent=this;this.children.push(a);for(var b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof WebMol.Scene&&b.__addObject(a)}},clone:function(a){void 0===a&&(a=new WebMol.Object3D);a.name=this.name;a.up.copy(this.up);a.position.copy(this.position);a.rotation.copy(this.rotation);a.eulerOrder=this.eulerOrder;a.scale.copy(this.scale);a.rotationAutoUpdate=this.rotationAutoUpdate;
a.matrix.copy(this.matrix);a.matrixWorld.copy(this.matrixWorld);a.quaternion.copy(this.quaternion);a.useQuaternion=this.useQuaternion;a.visible=this.visible;for(var b in this.children)a.add(this.children[b].clone());return a}};WebMol.Object3DIDCount=0;WebMol.Geometry=function(){function a(){WebMol.EventDispatcher.call(this);this.id=WebMol.GeometryIDCount++;this.name="";this.q=[]}a.prototype={};return a}();
Object.defineProperty(WebMol.Geometry.prototype,"vertices",{get:function(){var a=0,b;for(b in this.q)a+=this.q[b].vertices;return a}});WebMol.GeometryIDCount=0;
WebMol.Raycaster=function(){function a(a,c,d,e){this.k=new WebMol.Ray(a,c);0<this.k.direction.lengthSq()&&this.k.direction.normalize();this.h=e||0;this.f=d||Infinity}new WebMol.Sphere;new WebMol.Cylinder;new WebMol.Triangle;new WebMol.Vector3;new WebMol.Vector3;new WebMol.Vector3;new WebMol.Vector3;new WebMol.Ray;new WebMol.Vector3;new WebMol.Vector3;new WebMol.Matrix4;a.prototype.set=function(a,c){this.k.set(a,c)};return a}();
WebMol.Projector=function(){new WebMol.Matrix4;var a=new WebMol.Matrix4;this.projectVector=function(b,c){c.v.getInverse(c.matrixWorld);a.multiplyMatrices(c.j,c.v);return b.applyProjection(a)};this.unprojectVector=function(b,c){c.D.getInverse(c.j);a.multiplyMatrices(c.matrixWorld,c.D);return b.applyProjection(a)}};
WebMol.Camera=function(a,b,c,d){WebMol.Object3D.call(this);this.L=void 0!==a?a:50;this.J=void 0!==b?b:1;this.h=void 0!==c?c:.1;this.f=void 0!==d?d:2E3;this.j=new WebMol.Matrix4;this.D=new WebMol.Matrix4;this.v=new WebMol.Matrix4;this.updateProjectionMatrix()};WebMol.Camera.prototype=Object.create(WebMol.Object3D.prototype);WebMol.Camera.prototype.updateProjectionMatrix=function(){this.j.makePerspective(this.L,this.J,this.h,this.f)};
WebMol.Light=function(a,b){WebMol.Object3D.call(this);this.color=new WebMol.Color(a);this.position=new WebMol.Vector3(0,1,0);this.target=new WebMol.Object3D;this.intensity=void 0!==b?b:1};WebMol.Light.prototype=Object.create(WebMol.Object3D.prototype);
WebMol.Material=function(){WebMol.EventDispatcher.call(this);this.id=WebMol.MaterialIdCount++;this.name="";this.side=WebMol.P;this.opacity=1;this.transparent=!1;this.blending=WebMol.U;this.depthWrite=this.depthTest=!0;this.polygonOffset=!1;this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0;this.needsUpdate=this.visible=!0};
WebMol.Material.prototype.setValues=function(a){if(void 0!==a)for(var b in a){var c=a[b];if(void 0===c)console.warn("WebMol.Material: '"+b+"' parameter is undefined.");else if(b in this){var d=this[b];d instanceof WebMol.Color&&c instanceof WebMol.Color?d.copy(c):d instanceof WebMol.Color?d.set(c):d instanceof WebMol.Vector3&&c instanceof WebMol.Vector3?d.copy(c):this[b]=c}}};
WebMol.Material.prototype.clone=function(a){void 0===a&&(a=new WebMol.Material);a.name=this.name;a.side=this.side;a.opacity=this.opacity;a.transparent=this.transparent;a.blending=this.blending;a.depthTest=this.depthTest;a.depthWrite=this.depthWrite;a.polygonOffset=this.polygonOffset;a.polygonOffsetFactor=this.polygonOffsetFactor;a.polygonOffsetUnits=this.polygonOffsetUnits;a.alphaTest=this.alphaTest;a.O=this.O;a.visible=this.visible;return a};WebMol.MaterialIdCount=0;
WebMol.LineBasicMaterial=function(a){WebMol.Material.call(this);this.color=new WebMol.Color(16777215);this.linewidth=1;this.linejoin=this.linecap="round";this.vertexColors=!1;this.fog=!0;this.setValues(a)};WebMol.LineBasicMaterial.prototype=Object.create(WebMol.Material.prototype);WebMol.LineBasicMaterial.prototype.clone=function(){var a=new WebMol.LineBasicMaterial;WebMol.Material.prototype.clone.call(this,a);a.color.copy()};
WebMol.MeshLambertMaterial=function(a){WebMol.Material.call(this);this.color=new WebMol.Color(16777215);this.ambient=new WebMol.Color(1048575);this.emissive=new WebMol.Color(0);this.wrapAround=!1;this.wrapRGB=new WebMol.Vector3(1,1,1);this.envMap=this.specularMap=this.lightMap=this.map=null;this.reflectivity=1;this.refractionRatio=.98;this.fog=!0;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.shading=WebMol.W;this.vertexColors=WebMol.T;this.skinning=
!1;this.setValues(a)};WebMol.MeshLambertMaterial.prototype=Object.create(WebMol.Material.prototype);
WebMol.MeshLambertMaterial.prototype.clone=function(){var a=new WebMol.MeshLambertMaterial;WebMol.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.envMap=this.envMap;a.K=this.K;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.vertexColors=
this.vertexColors;a.skinning=this.skinning;a.N=this.N;a.M=this.M;return a};
WebMol.SpriteMaterial=function(a){WebMol.Material.call(this);this.color=new WebMol.Color(16777215);this.map=new WebMol.Texture;this.useScreenCoordinates=!0;this.depthTest=!this.useScreenCoordinates;this.sizeAttenuation=!this.useScreenCoordinates;this.scaleByViewPort=!this.sizeAttenuation;this.alignment=WebMol.SpriteAlignment.center.clone();this.fog=!1;this.uvOffset=new WebMol.Vector2(0,0);this.uvScale=new WebMol.Vector2(1,1);this.setValues(a);a=a||{};void 0===a.depthTest&&(this.depthTest=!this.useScreenCoordinates);
void 0===a.sizeAttenuation&&(this.sizeAttenuation=!this.useScreenCoordinates);void 0===a.scaleByViewPort&&(this.scaleByViewPort=!this.sizeAttenuation)};WebMol.SpriteMaterial.prototype=Object.create(WebMol.Material.prototype);
WebMol.SpriteMaterial.prototype.clone=function(){var a=new WebMol.SpriteMaterial;WebMol.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.useScreenCoordinates=useScreenCoordinates;a.sizeAttenuation=this.sizeAttenuation;a.$=this.scaleByViewPort;a.alignment.copy(this.alignment);a.uvOffset.copy(this.uvOffset);return a};WebMol.SpriteAlignment={};WebMol.SpriteAlignment.topLeft=new WebMol.Vector2(1,-1);WebMol.SpriteAlignment.topCenter=new WebMol.Vector2(0,-1);
WebMol.SpriteAlignment.topRight=new WebMol.Vector2(-1,-1);WebMol.SpriteAlignment.centerLeft=new WebMol.Vector2(1,0);WebMol.SpriteAlignment.center=new WebMol.Vector2(0,0);WebMol.SpriteAlignment.centerRight=new WebMol.Vector2(-1,0);WebMol.SpriteAlignment.bottomLeft=new WebMol.Vector2(1,1);WebMol.SpriteAlignment.bottomCenter=new WebMol.Vector2(0,1);WebMol.SpriteAlignment.bottomRight=new WebMol.Vector2(-1,1);
WebMol.Texture=function(a){WebMol.EventDispatcher.call(this);this.id=WebMol.TextureIdCount++;this.name="";this.s=a;this.B=[];this.u=new WebMol.X;this.H=this.G=WebMol.I;this.t=WebMol.Q;this.A=WebMol.R;this.m=1;this.format=WebMol.V;this.type=WebMol.Y;this.offset=new WebMol.Vector2(0,0);this.repeat=new WebMol.Vector2(1,1);this.p=!0;this.C=!1;this.o=!0;this.F=4;this.needsUpdate=!1};
WebMol.Texture.prototype={clone:function(a){void 0===a&&(a=new WebMol.Texture);a.s=this.s;a.B=this.B.slice(0);a.u=this.u;a.G=this.G;a.H=this.H;a.t=this.t;a.A=this.A;a.m=this.m;a.format=this.format;a.type=this.type;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.p=this.p;a.C=this.C;a.o=this.o;a.F=this.F;return a}};WebMol.TextureIdCount=0;
WebMol.Line=function(a,b,c){WebMol.Object3D.call(this);this.i=a;this.c=void 0!==b?b:new WebMol.LineBasicMaterial({color:16777215*Math.random()});this.type=void 0!==c?c:WebMol.LineStrip};WebMol.LineStrip=0;WebMol.LinePieces=1;WebMol.Line.prototype=Object.create(WebMol.Object3D.prototype);WebMol.Line.prototype.clone=function(a){void 0===a&&(a=new WebMol.Line(this.i,this.c,this.type));WebMol.Object3D.prototype.clone.call(this,a);return a};
WebMol.Mesh=function(a,b){WebMol.Object3D.call(this);this.i=a;this.c=void 0!==b?b:new WebMol.S({color:16777215*Math.random(),wireframe:!0})};WebMol.Mesh.prototype=Object.create(WebMol.Object3D.prototype);WebMol.Mesh.prototype.clone=function(a){void 0===a&&(a=new WebMol.Mesh(this.i,this.c));WebMol.Object3D.prototype.clone.call(this,a);return a};WebMol.Sprite=function(a){WebMol.Object3D.call(this);this.c=void 0!==a?a:new WebMol.SpriteMaterial;this.rotation3d=this.rotation;this.rotation=0};
WebMol.Sprite.prototype=Object.create(WebMol.Object3D.prototype);WebMol.Sprite.prototype.clone=function(a){void 0===a&&(a=new WebMol.Sprite(this.c));WebMol.Object3D.prototype.clone.call(this,a);return a};WebMol.Scene=function(){WebMol.Object3D.call(this);this.overrideMaterial=this.fog=null;this.matrixAutoUpdate=!1;this.__objects=[];this.__lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};WebMol.Scene.prototype=Object.create(WebMol.Object3D.prototype);
WebMol.Scene.prototype.__addObject=function(a){a instanceof WebMol.Light?(-1===this.__lights.indexOf(a)&&this.__lights.push(a),a.target&&void 0===a.target.parent&&this.add(a.target)):-1===this.__objects.indexOf(a)&&(this.__objects.push(a),this.__objectsAdded.push(a),-1!==this.__objectsRemoved.indexOf(a)&&this.__objectsRemoved.splice(b,1));for(var b in a.children)this.__addObject(a.children[b])};
WebMol.Fog=function(a,b,c){this.name="";this.color=new WebMol.Color(a);this.h=void 0!==b?b:1;this.f=void 0!==c?c:1E3};WebMol.Fog.prototype.clone=function(){return new WebMol.Fog(this.color.Z(),this.h,this.f)};WebMol.ShaderUtils={clone:function(a){var b,c={};for(b in a){c[b]={};c[b].type=a[b].type;var d=a[b].value;d instanceof WebMol.Color?c[b].value=d.clone():"number"===typeof d?c[b].value=d:d instanceof Array?c[b].value=[]:console.error("Error copying shader uniforms from ShaderLib: unknown type for uniform")}return c}};
WebMol.ShaderLib={basic:{fragmentShader:"uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\nuniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 fogColor;\nuniform float fogNear;\nuniform float fogFar;\nvarying vec3 vColor;\nvoid main() {\n    gl_FragColor = vec4( diffuse, opacity );\n    gl_FragColor = gl_FragColor * vec4( vColor, opacity );\n    float depth = gl_FragCoord.z / gl_FragCoord.w;\n    float fogFactor = smoothstep( fogNear, fogFar, depth );\n    gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n}",
vertexShader:"uniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 color;\nvarying vec3 vColor;\nvoid main() {\n    vColor = color;\n    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n    gl_Position = projectionMatrix * mvPosition;\n}",uniforms:{opacity:{type:"f",value:1},diffuse:{type:"c",value:new WebMol.Color(1,1,1)},fogColor:{type:"c",value:new WebMol.Color(1,
1,1)},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3}}},lambert:{fragmentShader:"uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\nuniform float opacity;\nuniform vec3 fogColor;\nuniform float fogNear;\nuniform float fogFar;\nvarying vec3 vLightFront;\nvarying vec3 vColor;\nvoid main() {\n    gl_FragColor = vec4( vec3 ( 1.0 ), opacity );\n    #ifndef WIREFRAME\n    gl_FragColor.xyz *= vLightFront;\n    #endif\n    gl_FragColor = gl_FragColor * vec4( vColor, opacity );\n    float depth = gl_FragCoord.z / gl_FragCoord.w;\n    float fogFactor = smoothstep( fogNear, fogFar, depth );\n    gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n}",
vertexShader:"uniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nuniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 ambientLightColor;\nuniform vec3 directionalLightColor[ 1 ];\nuniform vec3 directionalLightDirection[ 1 ];\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec3 color;\nvarying vec3 vColor;\nvarying vec3 vLightFront;\nvoid main() {\n    vColor = color;\n    vec3 objectNormal = normal;\n    vec3 transformedNormal = normalMatrix * objectNormal;\n    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n    vLightFront = vec3( 0.0 );\n    transformedNormal = normalize( transformedNormal );\n    vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ 0 ], 0.0 );\n    vec3 dirVector = normalize( lDirection.xyz );\n    float dotProduct = dot( transformedNormal, dirVector );\n    vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n    vLightFront += directionalLightColor[ 0 ] * directionalLightWeighting;\n    vLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n    gl_Position = projectionMatrix * mvPosition;\n}",
uniforms:{opacity:{type:"f",value:1},diffuse:{type:"c",value:new WebMol.Color(1,1,1)},fogColor:{type:"c",value:new WebMol.Color(1,1,1)},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},ambient:{type:"c",value:new WebMol.Color(1,1,1)},emissive:{type:"c",value:new WebMol.Color(1,1,1)},ambientLightColor:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]}}},sprite:{fragmentShader:"uniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nuniform int fogType;\nuniform vec3 fogColor;\nuniform float fogDensity;\nuniform float fogNear;\nuniform float fogFar;\nuniform float alphaTest;\nvarying vec2 vUV;\nvoid main() {\n    vec4 texture = texture2D(map, vUV);\n    if (texture.a < alphaTest) discard;\n    gl_FragColor = vec4(color * texture.xyz, texture.a * opacity);\n    if (fogType > 0) {\n        float depth = gl_FragCoord.z / gl_FragCoord.w;\n        float fogFactor = 0.0;\n        if (fogType == 1) {\n            fogFactor = smoothstep(fogNear, fogFar, depth);\n        }\n        else {\n            const float LOG2 = 1.442695;\n            float fogFactor = exp2(- fogDensity * fogDensity * depth * depth * LOG2);\n            fogFactor = 1.0 - clamp(fogFactor, 0.0, 1.0);\n        }\n        gl_FragColor = mix(gl_FragColor, vec4(fogColor, gl_FragColor.w), fogFactor);\n    }\n}",
vertexShader:"uniform int useScreenCoordinates;\nuniform int sizeAttenuation;\nuniform vec3 screenPosition;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 alignment;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\n    vUV = uvOffset + uv * uvScale;\n    vec2 alignedPosition = position + alignment;\n    vec2 rotatedPosition;\n    rotatedPosition.x = ( cos(rotation) * alignedPosition.x - sin(rotation) * alignedPosition.y ) * scale.x;\n    rotatedPosition.y = ( sin(rotation) * alignedPosition.x + cos(rotation) * alignedPosition.y ) * scale.y;\n    vec4 finalPosition;\n    if(useScreenCoordinates != 0) {\n        finalPosition = vec4(screenPosition.xy + rotatedPosition, screenPosition.z, 1.0);\n    }\n    else {\n        finalPosition = projectionMatrix * modelViewMatrix * vec4(0.0, 0.0, 0.0, 1.0);\n        finalPosition.xy += rotatedPosition * (sizeAttenuation == 1 ? 1.0 : finalPosition.z);\n    }\n    gl_Position = finalPosition;\n}",
uniforms:{}}};
